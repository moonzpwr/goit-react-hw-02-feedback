{"version":3,"sources":["components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","s","bold","FeedbackOptions","onLeaveFeedback","container","id","type","onClick","Section","title","children","Notification","message","App","state","leaveFeedback","evt","clickTarget","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAGe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,qBAAIG,UAAWC,IAAEC,KAAjB,oBAA+BJ,OAC/B,qBAAIE,UAAWC,IAAEC,KAAjB,gCAA2CH,IAA3C,U,oBCbS,SAASI,EAAT,GAA6C,IAAnBC,EAAkB,EAAlBA,gBACvC,OACE,sBAAKJ,UAAWC,IAAEI,UAAlB,UACE,wBAAQC,GAAG,eAAeC,KAAK,SAASC,QAASJ,EAAjD,kBAGA,wBACEE,GAAG,kBACHC,KAAK,SACLC,QAASJ,EAHX,qBAOA,wBAAQE,GAAG,cAAcC,KAAK,SAASC,QAASJ,EAAhD,oB,oBCbS,SAASK,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACtC,OACE,sBAAKX,UAAWC,IAAEI,UAAlB,UACE,mCAAMK,KACLC,KCLQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,IC6DEC,E,4MAzDbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,cAAgB,SAAAC,GACd,IAAMC,EAAcD,EAAIE,OAAOb,GACX,iBAAhBY,EACF,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAAE1B,KAAM0B,EAAU1B,KAAO,MAC5B,oBAAhBuB,EACT,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAAEzB,QAASyB,EAAUzB,QAAU,MAClC,gBAAhBsB,GACT,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAAExB,IAAKwB,EAAUxB,IAAM,O,EAIvDyB,mBAAqB,WAEnB,OADc,EAAKP,MAAMpB,KAAO,EAAKoB,MAAMnB,QAAU,EAAKmB,MAAMlB,K,EAIlE0B,gCAAkC,WAMhC,OALeC,KAAKC,MACjB,EAAKV,MAAMpB,MACT,EAAKoB,MAAMpB,KAAO,EAAKoB,MAAMnB,QAAU,EAAKmB,MAAMlB,KACnD,M,uDAMJ,OACE,gCACE,cAACY,EAAD,CAASC,MAAM,wBAAf,SACE,cAACP,EAAD,CACEC,gBAAiBsB,KAAKV,kBAG1B,cAACP,EAAD,CAASC,MAAM,aAAf,SACGgB,KAAKJ,qBAAuB,EAC3B,cAAC5B,EAAD,CACEC,KAAM+B,KAAKX,MAAMpB,KACjBC,QAAS8B,KAAKX,MAAMnB,QACpBC,IAAK6B,KAAKX,MAAMlB,IAChBC,MAAO4B,KAAKJ,mBACZvB,mBAAoB2B,KAAKH,kCAG3B,cAACX,EAAD,CAAcC,QAAS,iC,GAlDjBc,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,UAAY,qC,kBCA9BD,EAAOC,QAAU,CAAC,UAAY,8B","file":"static/js/main.63d5e602.chunk.js","sourcesContent":["import propTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li className={s.bold}>Total: {total()}</li>\n      <li className={s.bold}>Positive Feedback: {positivePercentage()}%</li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: propTypes.number.isRequired,\n  neutral: propTypes.number.isRequired,\n  bad: propTypes.number.isRequired,\n  total: propTypes.func.isRequired,\n  positivePercentage: propTypes.func.isRequired,\n};\n","import propTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({onLeaveFeedback}) {\n  return (\n    <div className={s.container}>\n      <button id=\"goodFeedback\" type=\"button\" onClick={onLeaveFeedback}>\n        Good\n      </button>\n      <button\n        id=\"neutralFeedback\"\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        Neutral\n      </button>\n      <button id=\"badFeedback\" type=\"button\" onClick={onLeaveFeedback}>\n        Bad\n      </button>\n      {/* <button\n                    id='neutralFeedback'\n                    type='button'\n                    onClick={props.onleaveFeedback}>Neutral</button>\n                <button\n                    id='badFeedback'\n                    type='button'\n                    onClick={props.onleaveFeedback}>Bad</button> */}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: propTypes.func.isRequired,\n};\n","import propTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({title, children}) {\n  return (\n    <div className={s.container}>\n      <h2> {title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string.isRequired,\n};\n","import propTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: propTypes.string.isRequired,\n};\n","import Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\nimport React from 'react';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = evt => {\n    const clickTarget = evt.target.id;\n    if (clickTarget === 'goodFeedback') {\n      this.setState(prevState => ({ good: prevState.good + 1 }));\n    } else if (clickTarget === 'neutralFeedback') {\n      this.setState(prevState => ({ neutral: prevState.neutral + 1 }));\n    } else if (clickTarget === 'badFeedback') {\n      this.setState(prevState => ({ bad: prevState.bad + 1 }));\n    }\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const result = Math.floor(\n      (this.state.good /\n        (this.state.good + this.state.neutral + this.state.bad)) *\n        100,\n    );\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onLeaveFeedback={this.leaveFeedback}\n          ></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message={'No statistics given'} />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bold\":\"Statistics_bold__bC15U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__2YTNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1veHj\"};"],"sourceRoot":""}