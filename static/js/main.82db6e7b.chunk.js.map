{"version":3,"sources":["components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","s","bold","FeedbackOptions","props","container","id","type","onClick","onLeaveFeedback","Section","title","children","Notification","message","App","state","leaveFeedback","evt","clickTarget","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAIe,SAASA,EAAT,GAAsE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAEvD,OACQ,+BACI,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,qBAAIG,UAAWC,IAAEC,KAAjB,oBAA+BJ,OAC/B,qBAAIE,UAAWC,IAAEC,KAAjB,gCAA2CH,IAA3C,U,oBCTL,SAASI,EAAgBC,GAChC,OACI,sBAAKJ,UAAWC,IAAEI,UAAlB,UACA,wBACQC,GAAG,eACHC,KAAK,SACLC,QAASJ,EAAMK,gBAHvB,kBAII,wBACIH,GAAG,kBACHC,KAAK,SACLC,QAASJ,EAAMK,gBAHnB,qBAIA,wBACIH,GAAG,cACHC,KAAK,SACLC,QAASJ,EAAMK,gBAHnB,oB,oBCXD,SAASC,EAAQN,GAExB,OACI,sBAAKJ,UAAWC,IAAEI,UAAlB,UACI,mCAAMD,EAAMO,SACXP,EAAMQ,YCNR,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OACI,4BAAIA,I,ICmDGC,E,4MA/CZC,MAAQ,CACPrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,cAAgB,SAAAC,GACd,IAAMC,EAAcD,EAAIE,OAAOd,GACP,iBAAhBa,EACF,EAAKE,UAAS,SAACC,GAAD,MAAgB,CAAE3B,KAAM2B,EAAU3B,KAAO,MAC9B,oBAAhBwB,EACT,EAAKE,UAAS,SAACC,GAAD,MAAgB,CAAE1B,QAAS0B,EAAU1B,QAAU,MACpC,gBAAhBuB,GACT,EAAKE,UAAS,SAACC,GAAD,MAAgB,CAAEzB,IAAKyB,EAAUzB,IAAM,O,EAK3D0B,mBAAqB,WAEjB,OADc,EAAKP,MAAMrB,KAAO,EAAKqB,MAAMpB,QAAU,EAAKoB,MAAMnB,K,EAIpE2B,gCAAkC,WAE9B,OADeC,KAAKC,MAAO,EAAKV,MAAMrB,MAAQ,EAAKqB,MAAMrB,KAAO,EAAKqB,MAAMpB,QAAU,EAAKoB,MAAMnB,KAAQ,M,uDAM5G,OACE,gCACE,cAACa,EAAD,CAASC,MAAM,wBAAf,SACA,cAACR,EAAD,CAAiBM,gBAAiBkB,KAAKV,kBAEvC,cAACP,EAAD,CAASC,MAAM,aAAf,SACGgB,KAAKJ,qBAAuB,EAC3B,cAAC7B,EAAD,CAAYC,KAAMgC,KAAKX,MAAMrB,KAAMC,QAAS+B,KAAKX,MAAMpB,QAASC,IAAK8B,KAAKX,MAAMnB,IAAKC,MAAO6B,KAAKJ,mBAAoBxB,mBAAoB4B,KAAKH,kCAC5I,cAACX,EAAD,CAAcC,QAAS,iC,GAxCnBc,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,UAAY,qC,kBCA9BD,EAAOC,QAAU,CAAC,UAAY,8B","file":"static/js/main.82db6e7b.chunk.js","sourcesContent":["import propTypes from 'prop-types';\r\nimport s from './Statistics.module.css'\r\n\r\n\r\nexport default function Statistics({good, neutral, bad, total, positivePercentage}) { \r\n\r\n        return (\r\n                <ul>\r\n                    <li>Good: {good}</li>\r\n                    <li>Neutral: {neutral}</li>\r\n                    <li>Bad: {bad}</li>\r\n                    <li className={s.bold}>Total: {total()}</li>\r\n                    <li className={s.bold}>Positive Feedback: {positivePercentage()}%</li>\r\n                </ul>\r\n                \r\n        )      \r\n\r\n}\r\n\r\nStatistics.propTypes = {\r\n        good: propTypes.number.isRequired,\r\n        neutral:propTypes.number.isRequired,\r\n        bad:propTypes.number.isRequired,\r\n        total:propTypes.func.isRequired,\r\n        positivePercentage:propTypes.func.isRequired,\r\n}","import propTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css'\r\n\r\nexport default function FeedbackOptions(props) { \r\n        return (\r\n            <div className={s.container}>\r\n            <button\r\n                    id='goodFeedback'\r\n                    type='button'\r\n                    onClick={props.onLeaveFeedback}>Good</button>\r\n                <button\r\n                    id='neutralFeedback'\r\n                    type='button'\r\n                    onClick={props.onLeaveFeedback}>Neutral</button>\r\n                <button\r\n                    id='badFeedback'\r\n                    type='button'\r\n                    onClick={props.onLeaveFeedback}>Bad</button>\r\n                {/* <button\r\n                    id='neutralFeedback'\r\n                    type='button'\r\n                    onClick={props.onleaveFeedback}>Neutral</button>\r\n                <button\r\n                    id='badFeedback'\r\n                    type='button'\r\n                    onClick={props.onleaveFeedback}>Bad</button> */}\r\n        </div>\r\n        )\r\n}\r\n   \r\nFeedbackOptions.propTypes = {\r\n      onLeaveFeedback: propTypes.func.isRequired,\r\n}","import propTypes from 'prop-types';\r\nimport s from './Section.module.css'\r\n\r\nexport default function Section(props)  {\r\n    \r\n        return (\r\n            <div className={s.container}>\r\n                <h2> {props.title}</h2 >\r\n                {props.children}\r\n            </div>\r\n        )\r\n        \r\n}\r\n\r\nSection.propTypes = {\r\n        title: propTypes.string.isRequired,\r\n       \r\n}","import propTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) { \r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\n\r\n\r\nNotification.propTypes = {\r\n      message: propTypes.string.isRequired,\r\n}","import Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions'\nimport Section from './components/Section/Section'\nimport Notification from \"./components/Notification/Notification\"\nimport React from 'react';\n\nclass App extends React.Component {\n\n   state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n   }\n  \n  leaveFeedback = evt => {\n    const clickTarget = evt.target.id;\n        if (clickTarget === 'goodFeedback') {\n          this.setState((prevState) => ({ good: prevState.good + 1 }))\n        } else if (clickTarget === 'neutralFeedback') {\n          this.setState((prevState) => ({ neutral: prevState.neutral + 1 }))\n        } else if (clickTarget === 'badFeedback') { \n          this.setState((prevState) => ({ bad: prevState.bad + 1 })) \n        }\n  }\n\n\n    countTotalFeedback = () => { \n        const total = this.state.good + this.state.neutral + this.state.bad;\n        return total\n    }\n  \n    countPositiveFeedbackPercentage = () => { \n        const result = Math.floor((this.state.good / (this.state.good + this.state.neutral + this.state.bad)) * 100)\n        return result\n    }\n  \n  \n  render() { \n    return (\n      <div>\n        <Section title='Please leave feedback'>\n        <FeedbackOptions onLeaveFeedback={this.leaveFeedback}></FeedbackOptions>\n        </Section>\n        <Section title='Statistics'>\n          {this.countTotalFeedback() > 0 ?\n            <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={this.countTotalFeedback} positivePercentage={this.countPositiveFeedbackPercentage} />\n            : <Notification message={'No statistics given'}/>}\n          \n        </Section>\n      </div>\n    )\n   \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bold\":\"Statistics_bold__bC15U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__2YTNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1veHj\"};"],"sourceRoot":""}